# Defer SSH key loading until first git/ssh operation
function __ensure_ssh_key
    if not set -q SSH_KEY_LOADED
        set -l key_count (ssh-add -L 2>/dev/null | rg -c "felix" || echo 0)
        if test "$key_count" -eq 0
            ssh-add --apple-use-keychain ~/.ssh/id_ed25519
        end
        set -g SSH_KEY_LOADED 1
    end
end

# Wrap git to load SSH keys on demand
function git
    __ensure_ssh_key
    command git $argv
end

# Wrap ssh to load SSH keys on demand
function ssh
    __ensure_ssh_key
    command ssh $argv
end


# Lazy load brew environment only when needed
function __lazy_load_brew
  if not set -q BREW_LOADED
    if test -x /opt/homebrew/bin/brew
      eval (/opt/homebrew/bin/brew shellenv)
    else if test -x /usr/local/bin/brew
      eval (/usr/local/bin/brew shellenv)
    end
    set -g BREW_LOADED 1
  end
end

# Wrap brew command
function brew
  __lazy_load_brew
  command brew $argv
end

# Load brew for GUI apps launched from terminal
function open
  __lazy_load_brew
  command open $argv
end

# Auto-activate virtualenvs in git directories
# Based on https://gist.github.com/bastibe/c0950e463ffdfdfada7adf149ae77c6f
function __auto_source_venv --on-variable PWD --description "Activate/Deactivate virtualenv on directory change"
  status --is-command-substitution; and return

  # Check if we are inside a git directory
  if git rev-parse --show-toplevel &>/dev/null
    set gitdir (realpath (git rev-parse --show-toplevel))
    set cwd (pwd -P)
    # While we are still inside the git directory, find the closest
    # virtualenv starting from the current directory.
    while string match "$gitdir*" "$cwd" &>/dev/null
      if test -e "$cwd/.venv/bin/activate.fish"
        source "$cwd/.venv/bin/activate.fish" &>/dev/null
        return
      else
        set cwd (path dirname "$cwd")
      end
    end
  end
  # If virtualenv activated but we are not in a git directory, deactivate.
  if test -n "$VIRTUAL_ENV"
    deactivate
  end
end
